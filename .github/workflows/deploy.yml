name: CI/CD Pipeline for Netflix Clone

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker build --build-arg TMDB_V3_API_KEY=${{ secrets.TMDB_API_KEY }} -t netflix-clone .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Step 3: Set up SSH private key to access Azure VM
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.AZURE_SSH_PRIVATE_KEY }}

      # Step 4: Deploy Docker image to Azure VM
      - name: Deploy to Azure VM
        run: |
          echo "Deploying Docker container to Azure VM..."

          # Save SSH private key for deployment
          echo "${{ secrets.AZURE_SSH_PRIVATE_KEY }}" > /tmp/azure_vm_key.pem
          chmod 600 /tmp/azure_vm_key.pem

          # SSH into the Azure VM and deploy the docker container
          ssh -i /tmp/azure_vm_key.pem -o StrictHostKeyChecking=no azureuser@${{ secrets.AZURE_VM_IP }} << 'EOF'
            # Pull the latest Docker image
            docker pull netflix-clone

            # Run the Docker container
            docker run -d -p 8081:80 netflix-clone
          EOF
          
          # Clean up private key
          rm /tmp/azure_vm_key.pem

  set-keyvault-secret:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Set TMDB API Key in Azure Key Vault
        uses: azure/cli-action@v1
        with:
          inlineScript: |
            az keyvault secret set --vault-name ${{ secrets.AZURE_KEYVAULT_NAME }} --name "TMDB_API_KEY" --value "${{ secrets.TMDB_API_KEY }}"
