trigger:
- main  # Adjust to your main branch or other trigger condition

pool:
  vmImage: 'ubuntu-latest'  # Choose the appropriate image for your needs

variables:
  tmdbApiKey: '05dfd6f37e1403412139893386ff723d'  # Replace with your TMDB API key securely (use Azure DevOps secrets for better security)
  
steps:

# Step 1: Install dependencies
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'  # Adjust Python version if needed
  displayName: 'Install Python'

- script: |
    echo "Install Docker"
    sudo apt-get update
    sudo apt-get install -y docker.io
  displayName: 'Install Docker'

# Step 2: Build the Docker image
- script: |
    docker build --build-arg TMDB_V3_API_KEY=$(tmdbApiKey) -t netflix-clone .
  displayName: 'Build Docker Image'

# Step 3: Store SSH private key as a secure file in Azure DevOps Pipeline Library
- task: DownloadSecureFile@1
  name: downloadKey
  inputs:
    secureFile: 'moviestream_key.pem'  # Replace with the name of your secure file
  displayName: 'Download SSH Private Key'

# Step 4: SSH into Azure VM and set secret in KeyVault
- script: |
    echo "SSH into Azure VM and set secret in KeyVault..."
    chmod 600 $(downloadKey.secureFilePath)  # Secure the private key
    ssh -i $(downloadKey.secureFilePath) azureuser@40.118.226.249 <<EOF
      cd moviesstreamg2
      az keyvault secret set --vault-name key --name "TMDB_API_KEY" --value "$(tmdbApiKey)"
    EOF
  displayName: 'Set TMDB API Key in KeyVault'

# Step 5: Run Docker container on the target machine
- script: |
    docker run -d -p 8081:80 netflix-clone
  displayName: 'Run Docker Container'

